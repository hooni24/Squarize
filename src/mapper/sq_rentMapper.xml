<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sq_rentMapper">

	<select id="getAllRent" parameterType="String" resultType="SQ_rent">
		SELECT *
		FROM sq_rent
		ORDER BY(CASE sq_rent_genre
				 WHEN #{keyword} THEN 1
				 ELSE 2
				 END)
				, sq_rent_genre
				, sq_rent_id
	</select>

	<insert id="insertRent" parameterType="SQ_rent">
		INSERT INTO sq_rent
		VALUES (sq_rent_id_sq.nextval, #{sq_member_id}, #{sq_rent_band_name}, #{sq_rent_concert_date}, default, #{sq_rent_limit}, #{sq_rent_info}, #{sq_rent_photo}, #{sq_rent_photo_original}, #{sq_rent_region}, #{sq_rent_genre}, #{sq_rent_running_time}, #{sq_rent_team_count}, #{sq_rent_lat}, #{sq_rent_lng})
	</insert>
	
	<select id="getRentById" parameterType="SQ_rent" resultType="SQ_rent">
		SELECT *
		FROM sq_rent
		WHERE sq_rent_id = #{sq_rent_id}
	</select>
	
	<select id="getMemberById" parameterType="String" resultType="SQ_member">
		SELECT *
		FROM sq_member
		WHERE sq_member_id = #{sq_member_id}
	</select>
	
	<select id="getArtistById" parameterType="String" resultType="SQ_artist">
		SELECT *
		FROM sq_artist
		WHERE sq_member_id = #{sq_member_id}
	</select>
	
	<delete id="deleteRent" parameterType="SQ_rent">
		DELETE sq_rent WHERE sq_rent_id = #{sq_rent_id}
	</delete>
	
	<update id="updateWithoutFile" parameterType="SQ_rent">
		UPDATE sq_rent
		SET sq_rent_band_name = #{sq_rent_band_name}, sq_rent_concert_date = #{sq_rent_concert_date}, sq_rent_limit = #{sq_rent_limit}, sq_rent_info = #{sq_rent_info}, sq_rent_region = #{sq_rent_region}, sq_rent_genre = #{sq_rent_genre}, sq_rent_running_time = #{sq_rent_running_time}, sq_rent_team_count = #{sq_rent_team_count}, sq_rent_lat = #{sq_rent_lat}, sq_rent_lng = #{sq_rent_lng}
		WHERE sq_rent_id = #{sq_rent_id}
	</update>
	
	<update id="updateRentPhoto" parameterType="SQ_rent">
		UPDATE sq_rent
		SET sq_rent_photo = #{sq_rent_photo}, sq_rent_photo_original = #{sq_rent_photo_original}
		WHERE sq_rent_id = #{sq_rent_id}
	</update>
	
	<insert id="rentApply" parameterType="SQ_rent_apply">
		INSERT INTO sq_rent_apply
		VALUES (sq_rent_apply_id_sq.nextval, #{sq_rent_id}, #{sq_member_id})
	</insert>
	
	<select id="checkRentApply" parameterType="SQ_rent_apply" resultType="SQ_rent_apply">
		SELECT *
		FROM sq_rent_apply
		WHERE sq_rent_id = #{sq_rent_id} AND sq_member_id = #{sq_member_id}
	</select>
	
	<select id="getAllMyRent" parameterType="String" resultType="SQ_rent">
		SELECT *
		FROM sq_rent
		WHERE sq_member_id = #{loginId}
		ORDER BY sq_rent_id
	</select>
	
	<select id="deleteApplyByPortfolio" parameterType="String">
		DELETE sq_rent_apply
		WHERE sq_member_id = #{sq_member_id}
	</select>
	
	<select id="rentApplySituation" parameterType="String" resultType="SQ_rent">
		SELECT * 
		FROM sq_rent re, 
			(select sq_rent_id from sq_rent_apply where sq_member_id = #{sq_member_id}) ap 
		WHERE re.sq_rent_id = ap.sq_rent_id
	</select>
	
	<select id="seeRentApply" parameterType="String" resultType="SQ_human">
		SELECT *
		FROM (SELECT ar.sq_member_id, sq_artist_phone, sq_artist_photo, sq_artist_intro, sq_member_name, sq_member_email 
		      FROM (SELECT * FROM sq_artist) ar, 
		      	   (SELECT * FROM sq_member) mem 
			  WHERE ar.sq_member_id = mem.sq_member_id 
		      AND ar.sq_member_id IN (SELECT sq_member_id 
        							  FROM sq_rent_apply 
		          					  WHERE sq_rent_id = #{sq_rent_id})) art,
		      (SELECT * FROM sq_portfolio) port
		WHERE art.sq_member_id = port.sq_member_id
	</select>
	
	<select id="searchRent" parameterType="SQ_rent" resultType="SQ_rent">
		SELECT *
		FROM (SELECT * FROM sq_rent) rent,
			(SELECT * 
			FROM (SELECT sq_rent_id
			    		, DISTNACE_WGS84(#{sq_rent_lat}, #{sq_rent_lng}, sq_rent_lat, sq_rent_lng) as distance
				  FROM sq_rent
				  WHERE (sq_rent_lat BETWEEN #{sq_rent_lat}-#{latRange} AND #{sq_rent_lat}+#{latRange})
			      AND (sq_rent_lng BETWEEN #{sq_rent_lng}-#{lngRange} AND #{sq_rent_lng}+#{lngRange})
				  ORDER BY distance) TMP
			)
		<where> rent.sq_rent_id = dist.sq_rent_id 
				AND distance &lt;= #{range}
					AND sq_rent_genre = #{sq_rent_genre}
				<if test="sq_rent_concert_date != ''">
					AND sq_rent_concert_date &gt;= #{sq_rent_concert_date}
				</if>
				<if test="sq_rent_limit != ''">
					AND sq_rent_concert_date &lt;= #{sq_rent_limit}
				</if>
		</where> 
	</select>
	
	
</mapper>
