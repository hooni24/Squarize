<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sq_seekingMapper">

	<select id="selectAll_sq_recruit" parameterType="SQ_recruit" resultType="SQ_recruit">
		SELECT 
			SQ_RECRUIT_ID
			,SQ_MEMBER_ID 
			,SQ_RECRUIT_TITLE
			,TO_CHAR(SQ_RECRUIT_INPUT_DATE, 'YYYY/MM/DD HH24:MI') "SQ_RECRUIT_INPUT_DATE"
			,TO_CHAR(SQ_RECRUIT_DATE, 'YYYY/MM/DD HH24:MI') "SQ_RECRUIT_DATE"
			,SQ_RECRUIT_PHOTO
			,SQ_RECRUIT_PHOTO_ORIGINAL
			,SQ_RECRUIT_PART
			,SQ_RECRUIT_GENRE
			,SQ_RECRUIT_LOCATION
			,SQ_RECRUIT_LATITUDE
			,SQ_RECRUIT_LONGITUDE
			,SQ_RECRUIT_INFO
		FROM 
			SQ_RECRUIT
		ORDER BY 
			<if test="sq_recruit_info == 'inst'">
			(CASE SQ_RECRUIT_PART WHEN #{sq_recruit_part} THEN 1 ELSE 2 END)
			,(CASE SQ_RECRUIT_GENRE WHEN #{sq_recruit_genre} THEN 1 ELSE 2 END)
			,SQ_RECRUIT_PART
			,SQ_RECRUIT_GENRE
			,SQ_RECRUIT_ID
			</if>
			<if test="sq_recruit_info =='genre'">
			(CASE SQ_RECRUIT_GENRE WHEN #{sq_recruit_genre} THEN 1 ELSE 2 END)
			,(CASE SQ_RECRUIT_PART WHEN #{sq_recruit_part} THEN 1 ELSE 2 END)
			,SQ_RECRUIT_GENRE
			,SQ_RECRUIT_PART
			,SQ_RECRUIT_ID
			</if>
	</select>
	
	<select id="AllRecruitApply" parameterType="int" resultType="SQ_human">
		select * 
			from sq_artist a, sq_member m,sq_portfolio p
			where a.sq_member_id=m.sq_member_id
				and m.sq_member_id=p.sq_member_id
				and m.sq_member_id IN(select sq_member_id
									from sq_recruit_apply
									where sq_recruit_id=#{sq_recruit_id})
	</select>
	
	<select id="selectOne_sq_recruit_artist" parameterType="int" resultType="SQ_recruit_artist">
		SELECT  
			SQ_R.SQ_MEMBER_ID,SQ_M.SQ_MEMBER_NAME,SQ_M.SQ_MEMBER_EMAIL
			,SQ_A.SQ_ARTIST_PHONE,SQ_A.SQ_ARTIST_PHOTO,SQ_A.SQ_ARTIST_INTRO 
			,SQ_R.SQ_RECRUIT_ID,SQ_R.SQ_RECRUIT_TITLE,SQ_R.SQ_RECRUIT_LOCATION
			,SQ_R.SQ_RECRUIT_LATITUDE,SQ_R.SQ_RECRUIT_LONGITUDE
			,SQ_R.SQ_RECRUIT_PART, SQ_R.SQ_RECRUIT_GENRE
			,TO_CHAR(SQ_R.SQ_RECRUIT_INPUT_DATE, 'YYYY/MM/DD HH24:MI') "SQ_RECRUIT_INPUT_DATE"
			,TO_CHAR(SQ_R.SQ_RECRUIT_DATE, 'YYYY/MM/DD HH24:MI') "SQ_RECRUIT_DATE"
			,SQ_R.SQ_RECRUIT_INFO
		FROM 
			SQ_RECRUIT SQ_R, SQ_MEMBER SQ_M, SQ_ARTIST SQ_A 
		WHERE 
			SQ_R.SQ_RECRUIT_ID = #{id}
		AND
			SQ_R.SQ_MEMBER_ID = SQ_M.SQ_MEMBER_ID
		AND 
			SQ_M.SQ_MEMBER_ID = SQ_A.SQ_MEMBER_ID
	</select>
	
	<select id="getAllMyApply" parameterType="String" resultType="SQ_recruit">
		select * 
		from sq_recruit 
		where sq_recruit_id in (select sq_recruit_id from sq_recruit_apply where sq_member_id=#{loginId} )
	</select>
	
	<insert id="insertSQrecruit" parameterType="SQ_recruit">
		INSERT INTO sq_recruit
		(sq_recruit_id, sq_member_id,sq_recruit_title,sq_recruit_input_date,sq_recruit_part,sq_recruit_photo,sq_recruit_photo_original,sq_recruit_genre,sq_recruit_date,sq_recruit_location,sq_recruit_latitude,sq_recruit_longitude,sq_recruit_info)
		values(SQ_RECRUIT_ID_SQ.nextval,#{sq_member_id},#{sq_recruit_title},sysdate,#{sq_recruit_part},#{sq_recruit_photo},#{sq_recruit_photo_original},#{sq_recruit_genre},#{sq_recruit_date},#{sq_recruit_location},#{sq_recruit_latitude},#{sq_recruit_longitude},#{sq_recruit_info})
	</insert>
	
	<delete id="deleteSQrecruit" parameterType="String">
		DELETE from sq_recruit where sq_recruit_id=#{sq_recruit_id}
	</delete>
	
	<select id="selectList_applied" parameterType="int" resultType="SQ_recruit_artist">
		SELECT * FROM SQ_RECRUIT_ARTIST WHERE SQ_RECRUIT_ID = #{id}
	</select>
	
	<insert id="insertApply" parameterType="SQ_recruit_artist">
		INSERT INTO SQ_RECRUIT_APPLY 
			VALUES 
				(
					SQ_RECRUIT_APPLY_ID_SQ.NEXTVAL
					, #{sq_recruit_id}
					, #{sq_member_id}
				) 
	</insert>
	
	<update id="updateSQRecruit" parameterType="SQ_recruit">
		UPDATE SQ_RECRUIT 
			SET 
				SQ_RECRUIT_TITLE = #{sq_recruit_title}
				, SQ_RECRUIT_PART = #{sq_recruit_part}
				, SQ_RECRUIT_GENRE = #{sq_recruit_genre}
				, SQ_RECRUIT_DATE = #{sq_recruit_date}
				<if test="sq_recruit_info!=''">
				, SQ_RECRUIT_INFO = #{sq_recruit_info}
				</if>
				<if test="sq_recruit_photo!=''">
				, SQ_RECRUIT_PHOTO = #{sq_recruit_photo}
				
				</if>
				<if test="sq_recruit_photo_original!=''">
				, SQ_RECRUIT_PHOTO_ORIGINAL = #{sq_recruit_original}
				</if>
			WHERE
				SQ_RECRUIT_ID = #{sq_recruit_id}
	</update>
	
	<delete id="deleteRecruit" parameterType="int">
		DELETE SQ_RECRUIT WHERE SQ_RECRUIT_ID = #{recruit_id}
	</delete>
	
	<select id="selectOne_apply" parameterType="SQ_recruit_artist" resultType="SQ_recruit_apply">
		SELECT * FROM SQ_RECRUIT_APPLY
			WHERE SQ_MEMBER_ID = #{sq_member_id} AND SQ_RECRUIT_ID = #{sq_recruit_id}
	</select>
	
	<select id="delete_apply" parameterType="int">
		DELETE FROM SQ_RECRUIT_APPLY
			WHERE SQ_RECRUIT_APPLY_ID = #{sq_recruit_apply_id}
	</select>
	
	<select id="selectOne_port" parameterType="string" resultType="SQ_portfolio">
		SELECT * FROM SQ_PORTFOLIO WHERE SQ_MEMBER_ID = #{sq_member_id}
	</select>
	
	<select id="getSQrecruit" parameterType="int" resultType="SQ_recruit">
		SELECT * FROM sq_recruit WHERE sq_recruit_id=#{recruit_id}
	</select>
	
	<select id="search_byKeyword" parameterType="SQ_recruit" resultType="SQ_recruit">
	 SELECT RECRUIT.SQ_RECRUIT_ID
			,RECRUIT.SQ_MEMBER_ID 
			,RECRUIT.SQ_RECRUIT_TITLE
			,TO_CHAR(RECRUIT.SQ_RECRUIT_INPUT_DATE, 'YYYY/MM/DD HH24:MI') "SQ_RECRUIT_INPUT_DATE"
			,TO_CHAR(RECRUIT.SQ_RECRUIT_DATE, 'YYYY/MM/DD HH24:MI') "SQ_RECRUIT_DATE"
			,RECRUIT.SQ_RECRUIT_PHOTO
			,RECRUIT.SQ_RECRUIT_PHOTO_ORIGINAL
			,RECRUIT.SQ_RECRUIT_PART
			,RECRUIT.SQ_RECRUIT_GENRE
			,RECRUIT.SQ_RECRUIT_LOCATION
			,RECRUIT.SQ_RECRUIT_LATITUDE
			,RECRUIT.SQ_RECRUIT_LONGITUDE
			,RECRUIT.SQ_RECRUIT_INFO
		FROM (SELECT * FROM SQ_RECRUIT) "RECRUIT"
         	 ,(SELECT * FROM 
                    		(SELECT SQ_RECRUIT_ID, DISTNACE_WGS84( #{sq_recruit_latitude}, #{sq_recruit_longitude} , SQ_RECRUIT_LATITUDE, SQ_RECRUIT_LONGITUDE ) "DISTANCE"
                     				FROM SQ_RECRUIT
                     				WHERE (SQ_RECRUIT_LATITUDE BETWEEN #{sq_recruit_latitude}-#{latRange} AND #{sq_recruit_latitude}+#{latRange})
                     				AND (SQ_RECRUIT_LONGITUDE BETWEEN #{sq_recruit_longitude}-#{lngRange} AND #{sq_recruit_longitude}+#{lngRange})
                     				ORDER BY DISTANCE
                     		) "TMP"
          	   ) "DIST"
		<where> RECRUIT.SQ_RECRUIT_ID = DIST.SQ_RECRUIT_ID 
			AND 
				DISTANCE &lt;= #{range}
			
				<if test="sq_recruit_genre != ''">
					AND SQ_RECRUIT_GENRE = #{sq_recruit_genre}
				</if>
				<if test="sq_recruit_part != ''">
					AND SQ_RECRUIT_PART = #{sq_recruit_part}
				</if>
		</where>
      	ORDER BY DISTANCE
	</select>
	
</mapper>
	